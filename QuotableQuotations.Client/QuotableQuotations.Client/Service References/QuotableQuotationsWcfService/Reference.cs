//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace QuotableQuotations.Client.QuotableQuotationsWcfService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="QuotableQuotation", Namespace="http://schemas.datacontract.org/2004/07/QuotableQuotations.Contracts.Classes")]
    [System.SerializableAttribute()]
    public partial class QuotableQuotation : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string QuoteField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Category {
            get {
                return this.CategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryField, value) != true)) {
                    this.CategoryField = value;
                    this.RaisePropertyChanged("Category");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Quote {
            get {
                return this.QuoteField;
            }
            set {
                if ((object.ReferenceEquals(this.QuoteField, value) != true)) {
                    this.QuoteField = value;
                    this.RaisePropertyChanged("Quote");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="QuotableQuotationsWcfService.IQuotableQuotationsWcfService")]
    public interface IQuotableQuotationsWcfService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuotableQuotationsWcfService/GetAllQuotations", ReplyAction="http://tempuri.org/IQuotableQuotationsWcfService/GetAllQuotationsResponse")]
        QuotableQuotations.Client.QuotableQuotationsWcfService.QuotableQuotation[] GetAllQuotations();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuotableQuotationsWcfService/GetAllQuotations", ReplyAction="http://tempuri.org/IQuotableQuotationsWcfService/GetAllQuotationsResponse")]
        System.Threading.Tasks.Task<QuotableQuotations.Client.QuotableQuotationsWcfService.QuotableQuotation[]> GetAllQuotationsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuotableQuotationsWcfService/GetQuotations", ReplyAction="http://tempuri.org/IQuotableQuotationsWcfService/GetQuotationsResponse")]
        QuotableQuotations.Client.QuotableQuotationsWcfService.QuotableQuotation[] GetQuotations(string text);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuotableQuotationsWcfService/GetQuotations", ReplyAction="http://tempuri.org/IQuotableQuotationsWcfService/GetQuotationsResponse")]
        System.Threading.Tasks.Task<QuotableQuotations.Client.QuotableQuotationsWcfService.QuotableQuotation[]> GetQuotationsAsync(string text);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuotableQuotationsWcfService/GetQuotationsByCategory", ReplyAction="http://tempuri.org/IQuotableQuotationsWcfService/GetQuotationsByCategoryResponse")]
        QuotableQuotations.Client.QuotableQuotationsWcfService.QuotableQuotation[] GetQuotationsByCategory(string category);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuotableQuotationsWcfService/GetQuotationsByCategory", ReplyAction="http://tempuri.org/IQuotableQuotationsWcfService/GetQuotationsByCategoryResponse")]
        System.Threading.Tasks.Task<QuotableQuotations.Client.QuotableQuotationsWcfService.QuotableQuotation[]> GetQuotationsByCategoryAsync(string category);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuotableQuotationsWcfService/GetQuotationsByName", ReplyAction="http://tempuri.org/IQuotableQuotationsWcfService/GetQuotationsByNameResponse")]
        QuotableQuotations.Client.QuotableQuotationsWcfService.QuotableQuotation[] GetQuotationsByName(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuotableQuotationsWcfService/GetQuotationsByName", ReplyAction="http://tempuri.org/IQuotableQuotationsWcfService/GetQuotationsByNameResponse")]
        System.Threading.Tasks.Task<QuotableQuotations.Client.QuotableQuotationsWcfService.QuotableQuotation[]> GetQuotationsByNameAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuotableQuotationsWcfService/CreateQuotation", ReplyAction="http://tempuri.org/IQuotableQuotationsWcfService/CreateQuotationResponse")]
        void CreateQuotation(QuotableQuotations.Client.QuotableQuotationsWcfService.QuotableQuotation quote);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuotableQuotationsWcfService/CreateQuotation", ReplyAction="http://tempuri.org/IQuotableQuotationsWcfService/CreateQuotationResponse")]
        System.Threading.Tasks.Task CreateQuotationAsync(QuotableQuotations.Client.QuotableQuotationsWcfService.QuotableQuotation quote);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuotableQuotationsWcfService/UpdateQuotation", ReplyAction="http://tempuri.org/IQuotableQuotationsWcfService/UpdateQuotationResponse")]
        void UpdateQuotation(int id, QuotableQuotations.Client.QuotableQuotationsWcfService.QuotableQuotation quote);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuotableQuotationsWcfService/UpdateQuotation", ReplyAction="http://tempuri.org/IQuotableQuotationsWcfService/UpdateQuotationResponse")]
        System.Threading.Tasks.Task UpdateQuotationAsync(int id, QuotableQuotations.Client.QuotableQuotationsWcfService.QuotableQuotation quote);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuotableQuotationsWcfService/DeleteQuotation", ReplyAction="http://tempuri.org/IQuotableQuotationsWcfService/DeleteQuotationResponse")]
        void DeleteQuotation(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuotableQuotationsWcfService/DeleteQuotation", ReplyAction="http://tempuri.org/IQuotableQuotationsWcfService/DeleteQuotationResponse")]
        System.Threading.Tasks.Task DeleteQuotationAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IQuotableQuotationsWcfServiceChannel : QuotableQuotations.Client.QuotableQuotationsWcfService.IQuotableQuotationsWcfService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class QuotableQuotationsWcfServiceClient : System.ServiceModel.ClientBase<QuotableQuotations.Client.QuotableQuotationsWcfService.IQuotableQuotationsWcfService>, QuotableQuotations.Client.QuotableQuotationsWcfService.IQuotableQuotationsWcfService {
        
        public QuotableQuotationsWcfServiceClient() {
        }
        
        public QuotableQuotationsWcfServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public QuotableQuotationsWcfServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public QuotableQuotationsWcfServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public QuotableQuotationsWcfServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public QuotableQuotations.Client.QuotableQuotationsWcfService.QuotableQuotation[] GetAllQuotations() {
            return base.Channel.GetAllQuotations();
        }
        
        public System.Threading.Tasks.Task<QuotableQuotations.Client.QuotableQuotationsWcfService.QuotableQuotation[]> GetAllQuotationsAsync() {
            return base.Channel.GetAllQuotationsAsync();
        }
        
        public QuotableQuotations.Client.QuotableQuotationsWcfService.QuotableQuotation[] GetQuotations(string text) {
            return base.Channel.GetQuotations(text);
        }
        
        public System.Threading.Tasks.Task<QuotableQuotations.Client.QuotableQuotationsWcfService.QuotableQuotation[]> GetQuotationsAsync(string text) {
            return base.Channel.GetQuotationsAsync(text);
        }
        
        public QuotableQuotations.Client.QuotableQuotationsWcfService.QuotableQuotation[] GetQuotationsByCategory(string category) {
            return base.Channel.GetQuotationsByCategory(category);
        }
        
        public System.Threading.Tasks.Task<QuotableQuotations.Client.QuotableQuotationsWcfService.QuotableQuotation[]> GetQuotationsByCategoryAsync(string category) {
            return base.Channel.GetQuotationsByCategoryAsync(category);
        }
        
        public QuotableQuotations.Client.QuotableQuotationsWcfService.QuotableQuotation[] GetQuotationsByName(string name) {
            return base.Channel.GetQuotationsByName(name);
        }
        
        public System.Threading.Tasks.Task<QuotableQuotations.Client.QuotableQuotationsWcfService.QuotableQuotation[]> GetQuotationsByNameAsync(string name) {
            return base.Channel.GetQuotationsByNameAsync(name);
        }
        
        public void CreateQuotation(QuotableQuotations.Client.QuotableQuotationsWcfService.QuotableQuotation quote) {
            base.Channel.CreateQuotation(quote);
        }
        
        public System.Threading.Tasks.Task CreateQuotationAsync(QuotableQuotations.Client.QuotableQuotationsWcfService.QuotableQuotation quote) {
            return base.Channel.CreateQuotationAsync(quote);
        }
        
        public void UpdateQuotation(int id, QuotableQuotations.Client.QuotableQuotationsWcfService.QuotableQuotation quote) {
            base.Channel.UpdateQuotation(id, quote);
        }
        
        public System.Threading.Tasks.Task UpdateQuotationAsync(int id, QuotableQuotations.Client.QuotableQuotationsWcfService.QuotableQuotation quote) {
            return base.Channel.UpdateQuotationAsync(id, quote);
        }
        
        public void DeleteQuotation(int id) {
            base.Channel.DeleteQuotation(id);
        }
        
        public System.Threading.Tasks.Task DeleteQuotationAsync(int id) {
            return base.Channel.DeleteQuotationAsync(id);
        }
    }
}
